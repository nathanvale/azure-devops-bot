// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model WorkItem {
  id                Int      @id
  title             String
  state             String
  type              String
  assignedTo        String   @map("assigned_to")
  azureUrl          String   @map("azure_url")  // Will map to url in future migration
  description       String?
  
  // Sprint/Board Info (for your reports)
  iterationPath     String?  @map("iteration_path") // e.g., "S3-Sprint 15"
  areaPath          String?  @map("area_path") // e.g., "Stage 3 Team"
  boardColumn       String?  @map("board_column") // e.g., "2. Build"
  boardColumnDone   Boolean  @default(false) @map("board_column_done")
  
  // Priority/Tags
  priority          Int?
  severity          String?
  tags              String?  // JSON array as string
  
  // All the dates
  createdDate       DateTime? @map("created_date")
  changedDate       DateTime? @map("changed_date") // For "Days Since Updated" 
  closedDate        DateTime? @map("closed_date")
  resolvedDate      DateTime? @map("resolved_date")
  activatedDate     DateTime? @map("activated_date")
  stateChangeDate   DateTime? @map("state_change_date")
  
  // People
  createdBy         String?  @map("created_by")
  changedBy         String?  @map("changed_by")
  closedBy          String?  @map("closed_by")
  resolvedBy        String?  @map("resolved_by")
  
  // Work tracking
  storyPoints       Float?   @map("story_points")
  effort            Float?
  remainingWork     Float?   @map("remaining_work")
  completedWork     Float?   @map("completed_work")
  originalEstimate  Float?   @map("original_estimate")
  
  // Content
  acceptanceCriteria String? @map("acceptance_criteria")
  reproSteps         String? @map("repro_steps")
  systemInfo         String? @map("system_info")
  
  // Related items
  parentId          Int?     @map("parent_id")
  
  // Additional Azure DevOps fields
  rev               Int?
  reason            String?
  watermark         Int?
  
  // Required fields from review feedback
  url               String?  // Direct API URL
  commentCount      Int      @default(0) @map("comment_count")
  hasAttachments    Boolean  @default(false) @map("has_attachments")
  teamProject       String?  @map("team_project")
  areaId            Int?     @map("area_id")
  nodeId            Int?     @map("node_id")
  stackRank         Float?   @map("stack_rank")
  valueArea         String?  @map("value_area")
  
  // Store EVERYTHING from Azure DevOps (backup)
  rawJson           String   @map("raw_json")
  
  // Sync metadata
  lastUpdatedAt     DateTime @map("last_updated_at")
  lastSyncedAt      DateTime @default(now()) @map("last_synced_at")
  
  // Relations
  comments          WorkItemComment[]
  
  @@index([type])
  @@index([state])
  @@index([assignedTo])
  @@index([iterationPath])
  @@index([changedDate])
  @@index([createdDate])
  @@map("work_items")
}

model WorkItemComment {
  id           Int      @id // Azure DevOps comment ID (changed to Int)
  workItemId   Int      @map("work_item_id")
  text         String
  createdBy    String   @map("created_by")
  createdDate  DateTime @map("created_date")
  modifiedBy   String?  @map("modified_by")
  modifiedDate DateTime? @map("modified_date")
  
  workItem     WorkItem @relation(fields: [workItemId], references: [id], onDelete: Cascade)
  
  @@index([workItemId])
  @@map("work_item_comments")
}